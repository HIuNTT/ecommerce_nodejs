// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  SUPERUSER
}

model User {
  id              String    @id @default(cuid())
  username        String    @unique @db.VarChar(255)
  fullname        String    @db.VarChar(255)
  avatarUrl       String?   @db.VarChar(255)
  email           String?   @unique @db.VarChar(255)
  phone           String?   @unique @db.VarChar(255)
  password        String    @db.VarChar(255)
  role            Role      @default(USER)
  refreshToken    String?   @db.Text
  isVerifiedEmail Boolean   @default(false)
  isVerifiedPhone Boolean   @default(false)
  isActived       Boolean   @default(true)
  addresses       Address[]
  otps            Otp[]
  createdAt       DateTime  @default(now()) @db.Timestamptz(0)
  updatedAt       DateTime  @updatedAt @db.Timestamptz(0)

  @@map("users")
}

model Address {
  id        String   @id @default(cuid())
  province  String   @db.VarChar(255) // Tỉnh/Thành phố
  district  String   @db.VarChar(255) // Quận/Huyện
  commune   String   @db.VarChar(255) // Phường/Xã
  noHouse   String   @db.VarChar(255) // Số nhà
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("addresses")
}

model Otp {
  id         String   @id @default(cuid())
  code       String   @db.VarChar(6)
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  verifyType String   @db.VarChar(255)
  createdAt  DateTime @default(now())

  @@map("otps")
}
